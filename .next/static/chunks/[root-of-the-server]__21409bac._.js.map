{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\r\n\r\ntype SendMessage = (msg: any) => void;\r\nexport type WebSocketMessage =\r\n  | {\r\n      type: \"turbopack-connected\";\r\n    }\r\n  | {\r\n      type: \"turbopack-message\";\r\n      data: Record<string, any>;\r\n    };\r\n\r\n\r\nexport type ClientOptions = {\r\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void;\r\n  sendMessage: SendMessage;\r\n  onUpdateError: (err: unknown) => void;\r\n};\r\n\r\nexport function connect({\r\n  addMessageListener,\r\n  sendMessage,\r\n  onUpdateError = console.error,\r\n}: ClientOptions) {\r\n  addMessageListener((msg) => {\r\n    switch (msg.type) {\r\n      case \"turbopack-connected\":\r\n        handleSocketConnected(sendMessage);\r\n        break;\r\n      default:\r\n        try {\r\n          if (Array.isArray(msg.data)) {\r\n            for (let i = 0; i < msg.data.length; i++) {\r\n              handleSocketMessage(msg.data[i] as ServerMessage);\r\n            }\r\n          } else {\r\n            handleSocketMessage(msg.data as ServerMessage);\r\n          }\r\n          applyAggregatedUpdates();\r\n        } catch (e: unknown) {\r\n          console.warn(\r\n            \"[Fast Refresh] performing full reload\\n\\n\" +\r\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\r\n              \"You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n\" +\r\n              \"Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n\" +\r\n              \"It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n\" +\r\n              \"Fast Refresh requires at least one parent function component in your React tree.\"\r\n          );\r\n          onUpdateError(e);\r\n          location.reload();\r\n        }\r\n        break;\r\n    }\r\n  });\r\n\r\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS;\r\n  if (queued != null && !Array.isArray(queued)) {\r\n    throw new Error(\"A separate HMR handler was already registered\");\r\n  }\r\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\r\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\r\n    },\r\n  };\r\n\r\n  if (Array.isArray(queued)) {\r\n    for (const [chunkPath, callback] of queued) {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\r\n    }\r\n  }\r\n}\r\n\r\ntype UpdateCallbackSet = {\r\n  callbacks: Set<UpdateCallback>;\r\n  unsubscribe: () => void;\r\n};\r\n\r\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map();\r\n\r\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\r\n  sendMessage(JSON.stringify(message));\r\n}\r\n\r\ntype ResourceKey = string;\r\n\r\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\r\n  return JSON.stringify({\r\n    path: resource.path,\r\n    headers: resource.headers || null,\r\n  });\r\n}\r\n\r\nfunction subscribeToUpdates(\r\n  sendMessage: SendMessage,\r\n  resource: ResourceIdentifier\r\n): () => void {\r\n  sendJSON(sendMessage, {\r\n    type: \"turbopack-subscribe\",\r\n    ...resource,\r\n  });\r\n\r\n  return () => {\r\n    sendJSON(sendMessage, {\r\n      type: \"turbopack-unsubscribe\",\r\n      ...resource,\r\n    });\r\n  };\r\n}\r\n\r\nfunction handleSocketConnected(sendMessage: SendMessage) {\r\n  for (const key of updateCallbackSets.keys()) {\r\n    subscribeToUpdates(sendMessage, JSON.parse(key));\r\n  }\r\n}\r\n\r\n// we aggregate all pending updates until the issues are resolved\r\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\r\n  new Map();\r\n\r\nfunction aggregateUpdates(msg: PartialServerMessage) {\r\n  const key = resourceKey(msg.resource);\r\n  let aggregated = chunkListsWithPendingUpdates.get(key);\r\n\r\n  if (aggregated) {\r\n    aggregated.instruction = mergeChunkListUpdates(\r\n      aggregated.instruction,\r\n      msg.instruction\r\n    );\r\n  } else {\r\n    chunkListsWithPendingUpdates.set(key, msg);\r\n  }\r\n}\r\n\r\nfunction applyAggregatedUpdates() {\r\n  if (chunkListsWithPendingUpdates.size === 0) return;\r\n  hooks.beforeRefresh();\r\n  for (const msg of chunkListsWithPendingUpdates.values()) {\r\n    triggerUpdate(msg);\r\n  }\r\n  chunkListsWithPendingUpdates.clear();\r\n  finalizeUpdate();\r\n}\r\n\r\nfunction mergeChunkListUpdates(\r\n  updateA: ChunkListUpdate,\r\n  updateB: ChunkListUpdate\r\n): ChunkListUpdate {\r\n  let chunks;\r\n  if (updateA.chunks != null) {\r\n    if (updateB.chunks == null) {\r\n      chunks = updateA.chunks;\r\n    } else {\r\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks);\r\n    }\r\n  } else if (updateB.chunks != null) {\r\n    chunks = updateB.chunks;\r\n  }\r\n\r\n  let merged;\r\n  if (updateA.merged != null) {\r\n    if (updateB.merged == null) {\r\n      merged = updateA.merged;\r\n    } else {\r\n      // Since `merged` is an array of updates, we need to merge them all into\r\n      // one, consistent update.\r\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\r\n      // no need to key on the `type` field.\r\n      let update = updateA.merged[0];\r\n      for (let i = 1; i < updateA.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateA.merged[i]\r\n        );\r\n      }\r\n\r\n      for (let i = 0; i < updateB.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateB.merged[i]\r\n        );\r\n      }\r\n\r\n      merged = [update];\r\n    }\r\n  } else if (updateB.merged != null) {\r\n    merged = updateB.merged;\r\n  }\r\n\r\n  return {\r\n    type: \"ChunkListUpdate\",\r\n    chunks,\r\n    merged,\r\n  };\r\n}\r\n\r\nfunction mergeChunkListChunks(\r\n  chunksA: Record<ChunkPath, ChunkUpdate>,\r\n  chunksB: Record<ChunkPath, ChunkUpdate>\r\n): Record<ChunkPath, ChunkUpdate> {\r\n  const chunks: Record<ChunkPath, ChunkUpdate> = {};\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, ChunkUpdate]>) {\r\n    const chunkUpdateB = chunksB[chunkPath];\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB);\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate;\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA;\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, ChunkUpdate]>) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nfunction mergeChunkUpdates(\r\n  updateA: ChunkUpdate,\r\n  updateB: ChunkUpdate\r\n): ChunkUpdate | undefined {\r\n  if (\r\n    (updateA.type === \"added\" && updateB.type === \"deleted\") ||\r\n    (updateA.type === \"deleted\" && updateB.type === \"added\")\r\n  ) {\r\n    return undefined;\r\n  }\r\n\r\n  if (updateA.type === \"partial\") {\r\n    invariant(updateA.instruction, \"Partial updates are unsupported\");\r\n  }\r\n\r\n  if (updateB.type === \"partial\") {\r\n    invariant(updateB.instruction, \"Partial updates are unsupported\");\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction mergeChunkListEcmascriptMergedUpdates(\r\n  mergedA: EcmascriptMergedUpdate,\r\n  mergedB: EcmascriptMergedUpdate\r\n): EcmascriptMergedUpdate {\r\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries);\r\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks);\r\n\r\n  return {\r\n    type: \"EcmascriptMergedUpdate\",\r\n    entries,\r\n    chunks,\r\n  };\r\n}\r\n\r\nfunction mergeEcmascriptChunkEntries(\r\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\r\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\r\n): Record<ModuleId, EcmascriptModuleEntry> {\r\n  return { ...entriesA, ...entriesB };\r\n}\r\n\r\nfunction mergeEcmascriptChunksUpdates(\r\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\r\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\r\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\r\n  if (chunksA == null) {\r\n    return chunksB;\r\n  }\r\n\r\n  if (chunksB == null) {\r\n    return chunksA;\r\n  }\r\n\r\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {};\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\r\n    const chunkUpdateB = chunksB[chunkPath];\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\r\n        chunkUpdateA,\r\n        chunkUpdateB\r\n      );\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate;\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA;\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB;\r\n    }\r\n  }\r\n\r\n  if (Object.keys(chunks).length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nfunction mergeEcmascriptChunkUpdates(\r\n  updateA: EcmascriptMergedChunkUpdate,\r\n  updateB: EcmascriptMergedChunkUpdate\r\n): EcmascriptMergedChunkUpdate | undefined {\r\n  if (updateA.type === \"added\" && updateB.type === \"deleted\") {\r\n    // These two completely cancel each other out.\r\n    return undefined;\r\n  }\r\n\r\n  if (updateA.type === \"deleted\" && updateB.type === \"added\") {\r\n    const added = [];\r\n    const deleted = [];\r\n    const deletedModules = new Set(updateA.modules ?? []);\r\n    const addedModules = new Set(updateB.modules ?? []);\r\n\r\n    for (const moduleId of addedModules) {\r\n      if (!deletedModules.has(moduleId)) {\r\n        added.push(moduleId);\r\n      }\r\n    }\r\n\r\n    for (const moduleId of deletedModules) {\r\n      if (!addedModules.has(moduleId)) {\r\n        deleted.push(moduleId);\r\n      }\r\n    }\r\n\r\n    if (added.length === 0 && deleted.length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    return {\r\n      type: \"partial\",\r\n      added,\r\n      deleted,\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"partial\" && updateB.type === \"partial\") {\r\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])]);\r\n    const deleted = new Set([\r\n      ...(updateA.deleted ?? []),\r\n      ...(updateB.deleted ?? []),\r\n    ]);\r\n\r\n    if (updateB.added != null) {\r\n      for (const moduleId of updateB.added) {\r\n        deleted.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    if (updateB.deleted != null) {\r\n      for (const moduleId of updateB.deleted) {\r\n        added.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: \"partial\",\r\n      added: [...added],\r\n      deleted: [...deleted],\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"added\" && updateB.type === \"partial\") {\r\n    const modules = new Set([\r\n      ...(updateA.modules ?? []),\r\n      ...(updateB.added ?? []),\r\n    ]);\r\n\r\n    for (const moduleId of updateB.deleted ?? []) {\r\n      modules.delete(moduleId);\r\n    }\r\n\r\n    return {\r\n      type: \"added\",\r\n      modules: [...modules],\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"partial\" && updateB.type === \"deleted\") {\r\n    // We could eagerly return `updateB` here, but this would potentially be\r\n    // incorrect if `updateA` has added modules.\r\n\r\n    const modules = new Set(updateB.modules ?? []);\r\n\r\n    if (updateA.added != null) {\r\n      for (const moduleId of updateA.added) {\r\n        modules.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: \"deleted\",\r\n      modules: [...modules],\r\n    };\r\n  }\r\n\r\n  // Any other update combination is invalid.\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction invariant(_: never, message: string): never {\r\n  throw new Error(`Invariant: ${message}`);\r\n}\r\n\r\nconst CRITICAL = [\"bug\", \"error\", \"fatal\"];\r\n\r\nfunction compareByList(list: any[], a: any, b: any) {\r\n  const aI = list.indexOf(a) + 1 || list.length;\r\n  const bI = list.indexOf(b) + 1 || list.length;\r\n  return aI - bI;\r\n}\r\n\r\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map();\r\n\r\nfunction emitIssues() {\r\n  const issues = [];\r\n  const deduplicationSet = new Set();\r\n\r\n  for (const [_, chunkIssues] of chunksWithIssues) {\r\n    for (const chunkIssue of chunkIssues) {\r\n      if (deduplicationSet.has(chunkIssue.formatted)) continue;\r\n\r\n      issues.push(chunkIssue);\r\n      deduplicationSet.add(chunkIssue.formatted);\r\n    }\r\n  }\r\n\r\n  sortIssues(issues);\r\n\r\n  hooks.issues(issues);\r\n}\r\n\r\nfunction handleIssues(msg: ServerMessage): boolean {\r\n  const key = resourceKey(msg.resource);\r\n  let hasCriticalIssues = false;\r\n\r\n  for (const issue of msg.issues) {\r\n    if (CRITICAL.includes(issue.severity)) {\r\n      hasCriticalIssues = true;\r\n    }\r\n  }\r\n\r\n  if (msg.issues.length > 0) {\r\n    chunksWithIssues.set(key, msg.issues);\r\n  } else if (chunksWithIssues.has(key)) {\r\n    chunksWithIssues.delete(key);\r\n  }\r\n\r\n  emitIssues();\r\n\r\n  return hasCriticalIssues;\r\n}\r\n\r\nconst SEVERITY_ORDER = [\"bug\", \"fatal\", \"error\", \"warning\", \"info\", \"log\"];\r\nconst CATEGORY_ORDER = [\r\n  \"parse\",\r\n  \"resolve\",\r\n  \"code generation\",\r\n  \"rendering\",\r\n  \"typescript\",\r\n  \"other\",\r\n];\r\n\r\nfunction sortIssues(issues: Issue[]) {\r\n  issues.sort((a, b) => {\r\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity);\r\n    if (first !== 0) return first;\r\n    return compareByList(CATEGORY_ORDER, a.category, b.category);\r\n  });\r\n}\r\n\r\nconst hooks = {\r\n  beforeRefresh: () => {},\r\n  refresh: () => {},\r\n  buildOk: () => {},\r\n  issues: (_issues: Issue[]) => {},\r\n};\r\n\r\nexport function setHooks(newHooks: typeof hooks) {\r\n  Object.assign(hooks, newHooks);\r\n}\r\n\r\nfunction handleSocketMessage(msg: ServerMessage) {\r\n  sortIssues(msg.issues);\r\n\r\n  handleIssues(msg);\r\n\r\n  switch (msg.type) {\r\n    case \"issues\":\r\n      // issues are already handled\r\n      break;\r\n    case \"partial\":\r\n      // aggregate updates\r\n      aggregateUpdates(msg);\r\n      break;\r\n    default:\r\n      // run single update\r\n      const runHooks = chunkListsWithPendingUpdates.size === 0;\r\n      if (runHooks) hooks.beforeRefresh();\r\n      triggerUpdate(msg);\r\n      if (runHooks) finalizeUpdate();\r\n      break;\r\n  }\r\n}\r\n\r\nfunction finalizeUpdate() {\r\n  hooks.refresh();\r\n  hooks.buildOk();\r\n\r\n  // This is used by the Next.js integration test suite to notify it when HMR\r\n  // updates have been completed.\r\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\r\n  if (globalThis.__NEXT_HMR_CB) {\r\n    globalThis.__NEXT_HMR_CB();\r\n    globalThis.__NEXT_HMR_CB = null;\r\n  }\r\n}\r\n\r\nfunction subscribeToChunkUpdate(\r\n  chunkListPath: ChunkListPath,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n): () => void {\r\n  return subscribeToUpdate(\r\n    {\r\n      path: chunkListPath,\r\n    },\r\n    sendMessage,\r\n    callback\r\n  );\r\n}\r\n\r\nexport function subscribeToUpdate(\r\n  resource: ResourceIdentifier,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n) {\r\n  const key = resourceKey(resource);\r\n  let callbackSet: UpdateCallbackSet;\r\n  const existingCallbackSet = updateCallbackSets.get(key);\r\n  if (!existingCallbackSet) {\r\n    callbackSet = {\r\n      callbacks: new Set([callback]),\r\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\r\n    };\r\n    updateCallbackSets.set(key, callbackSet);\r\n  } else {\r\n    existingCallbackSet.callbacks.add(callback);\r\n    callbackSet = existingCallbackSet;\r\n  }\r\n\r\n  return () => {\r\n    callbackSet.callbacks.delete(callback);\r\n\r\n    if (callbackSet.callbacks.size === 0) {\r\n      callbackSet.unsubscribe();\r\n      updateCallbackSets.delete(key);\r\n    }\r\n  };\r\n}\r\n\r\nfunction triggerUpdate(msg: ServerMessage) {\r\n  const key = resourceKey(msg.resource);\r\n  const callbackSet = updateCallbackSets.get(key);\r\n  if (!callbackSet) {\r\n    return;\r\n  }\r\n\r\n  for (const callback of callbackSet.callbacks) {\r\n    callback(msg);\r\n  }\r\n\r\n  if (msg.type === \"notFound\") {\r\n    // This indicates that the resource which we subscribed to either does not exist or\r\n    // has been deleted. In either case, we should clear all update callbacks, so if a\r\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\r\n    // message to the server.\r\n    // No need to send an \"unsubscribe\" message to the server, it will have already\r\n    // dropped the update stream before sending the \"notFound\" message.\r\n    updateCallbackSets.delete(key);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/styles/rtm.module.css [client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"active\": \"rtm-module__Jq76pa__active\",\n  \"blue\": \"rtm-module__Jq76pa__blue\",\n  \"bottomSection\": \"rtm-module__Jq76pa__bottomSection\",\n  \"comPortInput\": \"rtm-module__Jq76pa__comPortInput\",\n  \"container\": \"rtm-module__Jq76pa__container\",\n  \"dot\": \"rtm-module__Jq76pa__dot\",\n  \"endSessionButton\": \"rtm-module__Jq76pa__endSessionButton\",\n  \"error\": \"rtm-module__Jq76pa__error\",\n  \"errorContainer\": \"rtm-module__Jq76pa__errorContainer\",\n  \"green\": \"rtm-module__Jq76pa__green\",\n  \"inactive\": \"rtm-module__Jq76pa__inactive\",\n  \"killFeed\": \"rtm-module__Jq76pa__killFeed\",\n  \"leftContainer\": \"rtm-module__Jq76pa__leftContainer\",\n  \"loadingContainer\": \"rtm-module__Jq76pa__loadingContainer\",\n  \"map\": \"rtm-module__Jq76pa__map\",\n  \"mapContainer\": \"rtm-module__Jq76pa__mapContainer\",\n  \"pulse\": \"rtm-module__Jq76pa__pulse\",\n  \"red\": \"rtm-module__Jq76pa__red\",\n  \"refreshButton\": \"rtm-module__Jq76pa__refreshButton\",\n  \"retryButton\": \"rtm-module__Jq76pa__retryButton\",\n  \"rightContainer\": \"rtm-module__Jq76pa__rightContainer\",\n  \"sessionButton\": \"rtm-module__Jq76pa__sessionButton\",\n  \"sessionControls\": \"rtm-module__Jq76pa__sessionControls\",\n  \"sessionStatus\": \"rtm-module__Jq76pa__sessionStatus\",\n  \"sidebar\": \"rtm-module__Jq76pa__sidebar\",\n  \"simulationPage\": \"rtm-module__Jq76pa__simulationPage\",\n  \"soldier-item\": \"rtm-module__Jq76pa__soldier-item\",\n  \"spin\": \"rtm-module__Jq76pa__spin\",\n  \"spinner\": \"rtm-module__Jq76pa__spinner\",\n  \"startButton\": \"rtm-module__Jq76pa__startButton\",\n  \"statsTable\": \"rtm-module__Jq76pa__statsTable\",\n  \"statsTableWrapper\": \"rtm-module__Jq76pa__statsTableWrapper\",\n  \"statsTitle\": \"rtm-module__Jq76pa__statsTitle\",\n  \"statusIndicator\": \"rtm-module__Jq76pa__statusIndicator\",\n  \"stopButton\": \"rtm-module__Jq76pa__stopButton\",\n  \"tableContainer\": \"rtm-module__Jq76pa__tableContainer\",\n  \"team-group\": \"rtm-module__Jq76pa__team-group\",\n  \"teamIndicator\": \"rtm-module__Jq76pa__teamIndicator\",\n  \"teamName\": \"rtm-module__Jq76pa__teamName\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///C:/backup/incase%20port%20is%20not%20working/new_format/components/Sidebar.js"],"sourcesContent":["import React, { useState, useMemo, useRef, useEffect } from \"react\";\r\n\r\n/**\r\n * @param {Array} soldiers \r\n * @param {string|null} selectedSoldierId \r\n * @param {Function} onSelectSoldier \r\n */\r\nexport default function Sidebar({\r\n  soldiers,\r\n  selectedSoldierId,\r\n  onSelectSoldier,\r\n}) {\r\n  \r\n  const [expandedTeams, setExpandedTeams] = useState({\r\n    team_red: true,  // Default expanded\r\n    team_blue: true  // Default expanded\r\n  });\r\n\r\n  // Use stable sorting to prevent flickering\r\n  const groupedAndSorted = useMemo(() => {\r\n    const groupMap = {};\r\n    \r\n    // Group soldiers by team\r\n    soldiers.forEach((s) => {\r\n      const teamName = s.team || \"team_red\"; // fallback if missing\r\n      if (!groupMap[teamName]) groupMap[teamName] = [];\r\n      groupMap[teamName].push(s);\r\n    });\r\n\r\n    // Sort each team's soldiers ONCE and keep stable order\r\n    Object.keys(groupMap).forEach(teamName => {\r\n      groupMap[teamName].sort((a, b) => {\r\n        const idA = parseInt(a.soldier_id) || 0;\r\n        const idB = parseInt(b.soldier_id) || 0;\r\n        return idA - idB;\r\n      });\r\n    });\r\n\r\n    return groupMap;\r\n  }, [soldiers.length]); // Only re-sort when soldier count changes, not on every update\r\n\r\n  // Update soldier data without re-sorting\r\n  const updatedGrouped = useMemo(() => {\r\n    const updated = {};\r\n    \r\n    Object.keys(groupedAndSorted).forEach(teamName => {\r\n      updated[teamName] = groupedAndSorted[teamName].map(soldier => {\r\n        // Find the latest data for this soldier\r\n        const latestData = soldiers.find(s => s.soldier_id === soldier.soldier_id);\r\n        return latestData || soldier;\r\n      });\r\n    });\r\n    \r\n    return updated;\r\n  }, [soldiers, groupedAndSorted]);\r\n\r\n  // Toggle expand/collapse for a team\r\n  const toggleTeam = (teamName) => {\r\n    setExpandedTeams((prev) => ({\r\n      ...prev,\r\n      [teamName]: !prev[teamName],\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <aside style={styles.container}>\r\n      <h2 style={styles.header}>TEAM </h2>\r\n\r\n      {Object.keys(updatedGrouped).map((teamName) => {\r\n        const isExpanded = expandedTeams[teamName] !== false; // Default to expanded\r\n        const teamSoldiers = updatedGrouped[teamName];\r\n        \r\n        // Team color styling\r\n        const teamColor = teamName === 'team_red' ? '#ff4444' : '#4488ff';\r\n\r\n        return (\r\n          <div key={teamName} style={styles.teamSection}>\r\n            <div\r\n              style={{\r\n                ...styles.teamHeader,\r\n                borderLeft: `4px solid ${teamColor}`\r\n              }}\r\n              onClick={() => toggleTeam(teamName)}\r\n            >\r\n              <span style={{ color: teamColor }}>\r\n                {teamName.replace('team_', '').toUpperCase()}\r\n              </span>\r\n              <span style={styles.teamCount}>\r\n                {isExpanded ? \"▼\" : \"▶\"} {teamSoldiers.length}\r\n              </span>\r\n            </div>\r\n            \r\n            {/* If expanded, show all soldiers under this team */}\r\n            {isExpanded && (\r\n              <div style={styles.soldierList}>\r\n                {teamSoldiers.map((soldier) => (\r\n                  <SoldierRow\r\n                    key={soldier.soldier_id}\r\n                    soldier={soldier}\r\n                    teamColor={teamColor}\r\n                    isSelected={soldier.soldier_id === selectedSoldierId}\r\n                    onSelectSoldier={onSelectSoldier}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </aside>\r\n  );\r\n}\r\n\r\n// Memoized soldier row to prevent unnecessary re-renders\r\nconst SoldierRow = React.memo(({ soldier, teamColor, isSelected, onSelectSoldier }) => {\r\n  const { soldier_id, hit_status, frequency } = soldier;\r\n  const statusColor = hit_status ? \"#ff3333\" : \"#33ff33\";\r\n  const statusText = hit_status ? \"KIll\" : \"ACTIVE\";\r\n\r\n  const handleClick = () => {\r\n    onSelectSoldier(soldier_id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        ...styles.soldierRow,\r\n        backgroundColor: isSelected ? \"#333\" : \"transparent\",\r\n        borderColor: isSelected ? teamColor : \"transparent\",\r\n        borderLeft: `3px solid ${teamColor}`,\r\n      }}\r\n      onClick={handleClick}\r\n    >\r\n      <div style={styles.soldierLeft}>\r\n        <span style={{ color: statusColor, marginRight: \"0.5rem\", fontSize: '1.2rem' }}>●</span>\r\n        <div style={styles.soldierInfo}>\r\n          <span style={styles.soldierId}>{soldier_id}</span>\r\n          <span style={styles.frequency}>{frequency || `Soldier ${soldier_id}`}</span>\r\n        </div>\r\n      </div>\r\n      <div style={styles.soldierRight}>\r\n        <span style={{ \r\n          color: statusColor, \r\n          fontSize: '0.8rem',\r\n          fontWeight: 'bold',\r\n          padding: '2px 6px',\r\n          backgroundColor: hit_status ? '#ff333320' : '#33ff3320',\r\n          borderRadius: '3px'\r\n        }}>\r\n          {statusText}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst styles = {\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#0a0a0a\",\r\n    color: \"#fff\",\r\n    padding: \"1rem\",\r\n    fontFamily: \"'Orbitron', sans-serif\",\r\n    border: \"3px double #00ffff\",\r\n    borderRadius: \"8px\",\r\n    boxSizing: \"border-box\",\r\n    overflowY: \"auto\",\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n    margin: 0,\r\n    marginBottom: \"1.5rem\",\r\n    fontSize: \"1.4rem\",\r\n    letterSpacing: \"2px\",\r\n    color: \"#00ffff\",\r\n    textShadow: \"0 0 10px #00ffff\",\r\n  },\r\n  teamSection: {\r\n    marginBottom: \"1rem\",\r\n    border: \"1px solid #333\",\r\n    borderRadius: \"6px\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"#111\",\r\n  },\r\n  teamHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.8rem 1rem\",\r\n    backgroundColor: \"#1a1a1a\",\r\n    borderBottom: \"1px solid #333\",\r\n    transition: \"background-color 0.2s ease\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1.1rem\",\r\n  },\r\n  teamCount: {\r\n    color: \"#aaa\",\r\n    fontSize: \"0.9rem\",\r\n  },\r\n  soldierList: {\r\n    padding: \"0.5rem 0\",\r\n  },\r\n  soldierRow: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.6rem 1rem\",\r\n    margin: \"0.1rem 0\",\r\n    border: \"1px solid transparent\",\r\n    borderRadius: \"4px\",\r\n    transition: \"all 0.2s ease\",\r\n    backgroundColor: \"#0f0f0f\",\r\n  },\r\n  soldierLeft: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n  },\r\n  soldierInfo: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  soldierId: {\r\n    fontSize: \"1rem\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"0.1rem\",\r\n  },\r\n  callSign: {\r\n    fontSize: \"0.75rem\",\r\n    color: \"#bbb\",\r\n    textTransform: \"uppercase\",\r\n    letterSpacing: \"0.5px\",\r\n  },\r\n  soldierRight: {\r\n    fontSize: \"0.9rem\",\r\n  },\r\n};\r\n\r\n// Component is already exported as default at the top"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 865, "column": 0}, "map": {"version":3,"sources":["file:///C:/backup/incase%20port%20is%20not%20working/new_format/components/KillFeed.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst RawDataFeed = () => {\r\n  const [rawDataEntries, setRawDataEntries] = useState([]); // Raw data entries\r\n  const [connectionStatus, setConnectionStatus] = useState('Disconnected');\r\n  const [totalDataReceived, setTotalDataReceived] = useState(0);\r\n\r\n  // Helper function to format timestamp\r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString('en-US', { \r\n      hour12: false, \r\n      hour: '2-digit', \r\n      minute: '2-digit', \r\n      second: '2-digit',\r\n      fractionalSecondDigits: 3\r\n    });\r\n  };\r\n\r\n  // Helper function to parse and clean raw data\r\n  const parseRawData = (rawData) => {\r\n    // Split by common delimiters and clean up\r\n    const lines = rawData.split(/[\\r\\n]+/).filter(line => line.trim() !== '');\r\n    const cleanedLines = [];\r\n    \r\n    lines.forEach(line => {\r\n      const trimmed = line.trim();\r\n      if (trimmed) {\r\n        // Check if it contains structured data (like {module,frequency,id,lat,lon})\r\n        if (trimmed.includes('{') && trimmed.includes('}')) {\r\n          // Extract content between braces\r\n          const matches = trimmed.match(/\\{([^}]+)\\}/g);\r\n          if (matches) {\r\n            matches.forEach(match => {\r\n              const content = match.slice(1, -1); // Remove braces\r\n              cleanedLines.push(content);\r\n            });\r\n          }\r\n        } else {\r\n          cleanedLines.push(trimmed);\r\n        }\r\n      }\r\n    });\r\n    \r\n    return cleanedLines;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Connect to raw data WebSocket on port 8002\r\n    const ws = new WebSocket('ws://localhost:8002/ws');\r\n\r\n    ws.onopen = () => {\r\n      console.log(\"🔗 Raw Data Feed WebSocket connected to port 8002\");\r\n      setConnectionStatus('Connected');\r\n    };\r\n\r\n    ws.onmessage = (message) => {\r\n      try {\r\n        const data = JSON.parse(message.data);\r\n        console.log(\"📡 Raw Data Received:\", data);\r\n\r\n        // Handle different types of messages\r\n        if (data.type === 'connection_status') {\r\n          console.log(\"📊 Connection Status:\", data.message);\r\n          return;\r\n        }\r\n\r\n        if (data.type === 'raw_data') {\r\n          const parsedLines = parseRawData(data.data);\r\n          \r\n          // Create entries for each line of data\r\n          parsedLines.forEach((line, index) => {\r\n            const entry = {\r\n              id: `${data._id}-${index}`,\r\n              connection: data.connection,\r\n              rawData: line,\r\n              dataLength: line.length,\r\n              timestamp: data.timestamp,\r\n              displayTime: formatTime(data.timestamp)\r\n            };\r\n\r\n            console.log(\"✅ Adding raw data entry:\", entry);\r\n\r\n            setRawDataEntries((prev) => {\r\n              const updated = [entry, ...prev];\r\n              return updated.slice(0, 50); // Keep latest 50 entries\r\n            });\r\n\r\n            setTotalDataReceived(prev => prev + 1);\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Error parsing raw data:\", error);\r\n        console.log(\"📄 Raw message:\", message.data);\r\n        \r\n        // If JSON parsing fails, treat as plain text\r\n        const entry = {\r\n          id: `plain-${Date.now()}`,\r\n          connection: 'Unknown',\r\n          rawData: message.data,\r\n          dataLength: message.data.length,\r\n          timestamp: new Date().toISOString(),\r\n          displayTime: formatTime(new Date().toISOString())\r\n        };\r\n\r\n        setRawDataEntries((prev) => {\r\n          const updated = [entry, ...prev];\r\n          return updated.slice(0, 50);\r\n        });\r\n\r\n        setTotalDataReceived(prev => prev + 1);\r\n      }\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log(\"📤 Raw Data Feed WebSocket disconnected\");\r\n      setConnectionStatus('Disconnected');\r\n    };\r\n\r\n    ws.onerror = (error) => {\r\n      console.error(\"❌ Raw Data Feed WebSocket error:\", error);\r\n      setConnectionStatus('Error');\r\n    };\r\n\r\n    return () => {\r\n      ws.close();\r\n    };\r\n  }, []);\r\n\r\n  // Helper function to determine row color based on data content\r\n  const getRowColor = (rawData) => {\r\n    if (rawData.includes('ESP32') || rawData.includes('LoRa')) return '#2d5a87'; // Blue for ESP32/LoRa\r\n    if (rawData.includes('MHz')) return '#1a472a'; // Green for frequency data\r\n    if (rawData.includes(',')) return '#4a2c2a'; // Brown for CSV-like data\r\n    return '#333'; // Default gray\r\n  };\r\n\r\n  // Helper function to highlight important parts of data\r\n  const highlightData = (rawData) => {\r\n    let highlighted = rawData;\r\n    \r\n    // Highlight numbers (coordinates, IDs, frequencies)\r\n    highlighted = highlighted.replace(/\\b\\d+\\.?\\d*\\b/g, '<span style=\"color: #ffd700; font-weight: bold;\">$&</span>');\r\n    \r\n    // Highlight GPS coordinates patterns\r\n    highlighted = highlighted.replace(/([NS]|[EW])/g, '<span style=\"color: #00ff88;\">$&</span>');\r\n    \r\n    // Highlight MHz\r\n    highlighted = highlighted.replace(/(MHz)/g, '<span style=\"color: #ff6b6b;\">$&</span>');\r\n    \r\n    // Highlight ESP32, LoRa\r\n    highlighted = highlighted.replace(/(ESP32|LoRa)/g, '<span style=\"color: #4ecdc4;\">$&</span>');\r\n    \r\n    return highlighted;\r\n  };\r\n\r\n  return (\r\n    <div className=\"popup-message-wrapper\" style={{ maxHeight: \"400px\", overflowY: \"auto\" }}>\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'center',\r\n        marginBottom: '10px'\r\n      }}>\r\n        <h2 className=\"killFeedTitle\">Raw Data Feed (Port 8002)</h2>\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end' }}>\r\n          <span style={{ \r\n            color: connectionStatus === 'Connected' ? '#00ff88' : '#ff6b6b',\r\n            fontSize: '0.8em',\r\n            fontWeight: 'bold'\r\n          }}>\r\n            ● {connectionStatus}\r\n          </span>\r\n          <span style={{ \r\n            color: '#888',\r\n            fontSize: '0.7em'\r\n          }}>\r\n            {totalDataReceived} entries\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {rawDataEntries.length === 0 ? (\r\n        <div style={{ \r\n          textAlign: 'center', \r\n          color: '#666', \r\n          padding: '20px',\r\n          fontStyle: 'italic'\r\n        }}>\r\n          {connectionStatus === 'Connected' ? 'Waiting for data...' : 'No connection to raw data stream'}\r\n        </div>\r\n      ) : (\r\n        <div style={{ fontSize: '0.85em' }}>\r\n          {rawDataEntries.map((entry, index) => (\r\n            <div \r\n              key={entry.id} \r\n              className=\"kill-entry\" \r\n              style={{ \r\n                backgroundColor: getRowColor(entry.rawData),\r\n                margin: '2px 0',\r\n                padding: '6px 10px',\r\n                borderRadius: '4px',\r\n                borderLeft: '3px solid #00ff88',\r\n                transition: 'all 0.3s ease'\r\n              }}\r\n            >\r\n              <div style={{ \r\n                display: 'flex', \r\n                justifyContent: 'space-between',\r\n                alignItems: 'flex-start',\r\n                gap: '10px'\r\n              }}>\r\n                <div style={{ flex: 1 }}>\r\n                  <p style={{ \r\n                    margin: '0 0 3px 0',\r\n                    fontFamily: 'Courier New, monospace',\r\n                    fontSize: '0.9em',\r\n                    lineHeight: '1.2'\r\n                  }}>\r\n                    <span \r\n                      dangerouslySetInnerHTML={{ \r\n                        __html: highlightData(entry.rawData) \r\n                      }}\r\n                    />\r\n                  </p>\r\n                  <div style={{ \r\n                    display: 'flex', \r\n                    gap: '15px',\r\n                    fontSize: '0.7em',\r\n                    color: '#888'\r\n                  }}>\r\n                    <span>📡 {entry.connection}</span>\r\n                    <span>📏 {entry.dataLength} bytes</span>\r\n                    <span>🕒 {entry.displayTime}</span>\r\n                  </div>\r\n                </div>\r\n                <span style={{ \r\n                  color: '#555',\r\n                  fontSize: '0.7em',\r\n                  minWidth: '25px',\r\n                  textAlign: 'right'\r\n                }}>\r\n                  #{index + 1}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      \r\n      {rawDataEntries.length > 0 && (\r\n        <div style={{ \r\n          textAlign: 'center', \r\n          color: '#888', \r\n          fontSize: '0.7em',\r\n          padding: '10px 0 5px 0',\r\n          borderTop: '1px solid #444',\r\n          marginTop: '10px'\r\n        }}>\r\n          Showing latest 50 entries • Auto-scrolling enabled\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RawDataFeed;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1278, "column": 0}, "map": {"version":3,"sources":["file:///C:/backup/incase%20port%20is%20not%20working/new_format/config.js"],"sourcesContent":["const WS_CONFIG = {\r\n  BASE_URL: 'ws://localhost',\r\n  HTTP_BASE_URL: 'http://localhost',\r\n  RTM_PORTS: { SOLDIER_DATA: 8001, KILL_FEED: 8002, STATS: 8003 },\r\n  AAR_PORTS: { SOLDIER_DATA: 8765, KILL_FEED: 8766, STATS: 8767 },\r\n  API_PORTS: { REPLAY_INIT: 8000 },\r\n  PORTS: { SOLDIER_DATA: 8001, KILL_FEED: 8002, STATS: 8003 }\r\n};\r\n\r\nWS_CONFIG.getSoldierWsUrl    = () => `${WS_CONFIG.BASE_URL}:${WS_CONFIG.RTM_PORTS.SOLDIER_DATA}/ws`;\r\nWS_CONFIG.getKillFeedWsUrl   = () => `${WS_CONFIG.BASE_URL}:${WS_CONFIG.RTM_PORTS.KILL_FEED}/ws`;\r\nWS_CONFIG.getStatsWsUrl      = () => `${WS_CONFIG.BASE_URL}:${WS_CONFIG.RTM_PORTS.STATS}/ws`;\r\nWS_CONFIG.getAARSoldierWsUrl = () => `${WS_CONFIG.BASE_URL}:${WS_CONFIG.AAR_PORTS.SOLDIER_DATA}/ws`;\r\nWS_CONFIG.getAARKillFeedWsUrl= () => `${WS_CONFIG.BASE_URL}:${WS_CONFIG.AAR_PORTS.KILL_FEED}/ws`;\r\nWS_CONFIG.getAARStatsWsUrl   = () => `${WS_CONFIG.BASE_URL}:${WS_CONFIG.AAR_PORTS.STATS}/ws`;\r\nWS_CONFIG.getReplayInitUrl   = () => `${WS_CONFIG.HTTP_BASE_URL}:${WS_CONFIG.API_PORTS.REPLAY_INIT}/initialize-replay`;\r\n\r\nWS_CONFIG.getAllWebSocketUrls = () => [\r\n  WS_CONFIG.getSoldierWsUrl(),\r\n  WS_CONFIG.getKillFeedWsUrl(),\r\n  WS_CONFIG.getStatsWsUrl(),\r\n  WS_CONFIG.getAARSoldierWsUrl(),\r\n  WS_CONFIG.getAARKillFeedWsUrl(),\r\n  WS_CONFIG.getAARStatsWsUrl()\r\n];\r\nWS_CONFIG.getAllHttpApiUrls = () => [ WS_CONFIG.getReplayInitUrl() ];\r\n\r\nmodule.exports = { WS_CONFIG };\r\n\r\n// debug logs (optional)\r\nconsole.log('Real-Time Monitoring WebSocket URLs:', {\r\n  soldier: WS_CONFIG.getSoldierWsUrl(),\r\n  killFeed: WS_CONFIG.getKillFeedWsUrl(),\r\n  stats: WS_CONFIG.getStatsWsUrl()\r\n});\r\nconsole.log('After Action Review WebSocket URLs:', {\r\n  soldier: WS_CONFIG.getAARSoldierWsUrl(),\r\n  killFeed: WS_CONFIG.getAARKillFeedWsUrl(),\r\n  stats: WS_CONFIG.getAARStatsWsUrl()\r\n});\r\nconsole.log('HTTP API URLs:', { replayInit: WS_CONFIG.getReplayInitUrl() });\r\nconsole.log('All WebSocket URLs for CSP:', WS_CONFIG.getAllWebSocketUrls());\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;IAChB,UAAU;IACV,eAAe;IACf,WAAW;QAAE,cAAc;QAAM,WAAW;QAAM,OAAO;IAAK;IAC9D,WAAW;QAAE,cAAc;QAAM,WAAW;QAAM,OAAO;IAAK;IAC9D,WAAW;QAAE,aAAa;IAAK;IAC/B,OAAO;QAAE,cAAc;QAAM,WAAW;QAAM,OAAO;IAAK;AAC5D;AAEA,UAAU,eAAe,GAAM,IAAM,GAAG,UAAU,QAAQ,CAAC,CAAC,EAAE,UAAU,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC;AACnG,UAAU,gBAAgB,GAAK,IAAM,GAAG,UAAU,QAAQ,CAAC,CAAC,EAAE,UAAU,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC;AAChG,UAAU,aAAa,GAAQ,IAAM,GAAG,UAAU,QAAQ,CAAC,CAAC,EAAE,UAAU,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;AAC5F,UAAU,kBAAkB,GAAG,IAAM,GAAG,UAAU,QAAQ,CAAC,CAAC,EAAE,UAAU,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC;AACnG,UAAU,mBAAmB,GAAE,IAAM,GAAG,UAAU,QAAQ,CAAC,CAAC,EAAE,UAAU,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC;AAChG,UAAU,gBAAgB,GAAK,IAAM,GAAG,UAAU,QAAQ,CAAC,CAAC,EAAE,UAAU,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;AAC5F,UAAU,gBAAgB,GAAK,IAAM,GAAG,UAAU,aAAa,CAAC,CAAC,EAAE,UAAU,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC;AAEtH,UAAU,mBAAmB,GAAG,IAAM;QACpC,UAAU,eAAe;QACzB,UAAU,gBAAgB;QAC1B,UAAU,aAAa;QACvB,UAAU,kBAAkB;QAC5B,UAAU,mBAAmB;QAC7B,UAAU,gBAAgB;KAC3B;AACD,UAAU,iBAAiB,GAAG,IAAM;QAAE,UAAU,gBAAgB;KAAI;AAEpE,OAAO,OAAO,GAAG;IAAE;AAAU;AAE7B,wBAAwB;AACxB,QAAQ,GAAG,CAAC,wCAAwC;IAClD,SAAS,UAAU,eAAe;IAClC,UAAU,UAAU,gBAAgB;IACpC,OAAO,UAAU,aAAa;AAChC;AACA,QAAQ,GAAG,CAAC,uCAAuC;IACjD,SAAS,UAAU,kBAAkB;IACrC,UAAU,UAAU,mBAAmB;IACvC,OAAO,UAAU,gBAAgB;AACnC;AACA,QAAQ,GAAG,CAAC,kBAAkB;IAAE,YAAY,UAAU,gBAAgB;AAAG;AACzE,QAAQ,GAAG,CAAC,+BAA+B,UAAU,mBAAmB","debugId":null}},
    {"offset": {"line": 1345, "column": 0}, "map": {"version":3,"sources":["file:///C:/backup/incase%20port%20is%20not%20working/new_format/components/StatsTable.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport { WS_CONFIG } from \"../config\";\r\n\r\nconst StatsTable = () => {\r\n  const [stats, setStats] = useState({ team_red: {}, team_blue: {} });\r\n\r\n  useEffect(() => {\r\n    const ws = new WebSocket(WS_CONFIG.getStatsWsUrl());\r\n    \r\n    ws.onopen = () => {\r\n      console.log(\"🔗 Stats WebSocket connected\");\r\n    };\r\n    \r\n    ws.onclose = () => {\r\n      console.log(\"📤 Stats WebSocket disconnected\");\r\n    };\r\n    \r\n    ws.onerror = (error) => {\r\n      console.error(\"❌ Stats WebSocket error:\", error);\r\n    };\r\n    \r\n    ws.onmessage = (message) => {\r\n      try {\r\n        const data = JSON.parse(message.data);\r\n        \r\n        // Log received data for debugging\r\n        console.log(\"📊 Stats Data Received:\", data);\r\n        \r\n        // Only update stats if the message has team_red and team_blue\r\n        if (data.team_red && data.team_blue) {\r\n          setStats(data);\r\n          \r\n          // Log the actual values being set\r\n          console.log(\"✅ Stats Updated:\");\r\n          console.log(`   🔴 Red Team  - Kills: ${data.team_red.total_killed || 0}, Bullets: ${data.team_red.bullets_fired || 0}`);\r\n          console.log(`   🔵 Blue Team - Kills: ${data.team_blue.total_killed || 0}, Bullets: ${data.team_blue.bullets_fired || 0}`);\r\n        }\r\n        // Optionally log other messages\r\n        else {\r\n          console.log(\"⚠️ Received non-stats message:\", data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Error parsing stats data:\", error);\r\n      }\r\n    };\r\n    \r\n    return () => ws.close();\r\n  }, []);\r\n\r\n  // Helper function to safely get stat values\r\n  const getStat = (team, stat) => {\r\n    return stats[team]?.[stat] || 0;\r\n  };\r\n\r\n  return (\r\n    <div className=\"summary-card\" id=\"statsCard\">\r\n      <h2>Statistical Summary</h2>\r\n      <div className=\"stats-table-wrapper\">\r\n        <table id=\"statsTable\">\r\n          <thead>\r\n            <tr>\r\n              <th>Team</th>\r\n              <th>Killed</th>\r\n              <th>Fired</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Red Team</td>\r\n              <td style={{ \r\n                fontWeight: 'bold', \r\n                color: getStat('team_red', 'total_killed') > 0 ? '#ff6666' : 'inherit' \r\n              }}>\r\n                {getStat('team_red', 'total_killed')}\r\n              </td>\r\n              <td style={{ \r\n                fontWeight: 'bold', \r\n                color: getStat('team_red', 'bullets_fired') > 0 ? '#66ff66' : 'inherit' \r\n              }}>\r\n                {getStat('team_red', 'bullets_fired')}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Blue Team</td>\r\n              <td style={{ \r\n                fontWeight: 'bold', \r\n                color: getStat('team_blue', 'total_killed') > 0 ? '#ff6666' : 'inherit' \r\n              }}>\r\n                {getStat('team_blue', 'total_killed')}\r\n              </td>\r\n              <td style={{ \r\n                fontWeight: 'bold', \r\n                color: getStat('team_blue', 'bullets_fired') > 0 ? '#66ff66' : 'inherit' \r\n              }}>\r\n                {getStat('team_blue', 'bullets_fired')}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n     <style jsx global>{`\r\n\r\nbody {\r\n    background-color: #0b0c10;\r\n    color: #66fcf1;\r\n    font-family: \"Exo 2\", sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    min-height: 100vh;\r\n    overflow: hidden;\r\n}\r\n\r\n.end-session-button {\r\n    position: absolute;\r\n    top: 20px;\r\n    right: 20px;\r\n    background-color: #45a29e;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n    font-family: \"Exo 2\", sans-serif;\r\n    font-size: 1em;\r\n    transition: background-color 0.3s;\r\n    z-index: 1000;\r\n    text-decoration: none;\r\n}\r\n\r\n.end-session-button:hover {\r\n    background-color: #66fcf1;\r\n    color: #0b0c10;\r\n}\r\n\r\n#simulationPage {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: #0b0c10;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    height: calc(100vh - 40px);\r\n    gap: 20px;\r\n    flex-wrap: nowrap;\r\n}\r\n\r\n.left-container {\r\n    flex: 0 0 200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #1f2833;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 10px rgba(102, 252, 241, 0.5);\r\n    max-height: calc(100vh - 40px);\r\n    overflow: hidden;\r\n}\r\n\r\n.team-content-wrapper {\r\n    flex: 1;\r\n    overflow-y: auto;\r\n    padding: 20px;\r\n}\r\n\r\n.right-container {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    min-width: 0;\r\n    height: 100%;\r\n}\r\n\r\n.map-container {\r\n    flex: 2;\r\n    position: relative;\r\n    overflow: hidden;\r\n    display: flex;\r\n    min-height: 400px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #1f2833;\r\n    border-radius: 10px;\r\n    width: 100%;\r\n}\r\n\r\n.map-container img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n}\r\n\r\n.fullscreen-button {\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 10px;\r\n    max-width: 100px;\r\n    background-color: rgba(69, 162, 158, 0.7);\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 5px 10px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n    z-index: 1;\r\n}\r\n\r\n.team-label {\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 1;\r\n    font-size: 1.2em;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    cursor: pointer;\r\n    padding: 10px;\r\n    background-color: #45a29e;\r\n    color: #0b0c10;\r\n    border-radius: 5px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.soldier-item {\r\n    padding: 5px 10px;\r\n    font-size: 1em;\r\n    color: #66fcf1;\r\n    display: none;\r\n    text-align: left;\r\n    background-color: #0b0c10;\r\n    border-radius: 3px;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.soldier-circle {\r\n    position: absolute;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    border: 2px solid black;\r\n    z-index: 2;\r\n}\r\n\r\n.soldier-line {\r\n    width: 2px;\r\n    height: 20px;\r\n    background-color: white;\r\n    position: absolute;\r\n    top: 0;\r\n    transform-origin: bottom;\r\n}\r\n\r\n.soldier-item.visible {\r\n    display: block;\r\n}\r\n\r\n.summary-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 20px;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.summary-card {\r\n    flex: 1;\r\n    padding: 10px;\r\n    text-align: center;\r\n    font-size: 1em;\r\n    box-shadow: 0 0 10px rgba(102, 252, 241, 0.5);\r\n    border-radius: 10px;\r\n    background-color: #1f2833;\r\n    max-height: 300px;\r\n    overflow: hidden;\r\n}\r\n\r\n#popupCard {\r\n    flex: 1 1 300px;\r\n    padding: 10px;\r\n    text-align: center;\r\n    font-size: 1em;\r\n    box-shadow: 0 0 10px rgba(102, 252, 241, 0.5);\r\n    border-radius: 10px;\r\n    background-color: #1f2833;\r\n    max-height: 300px;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    max-width: 30%;\r\n}\r\n\r\n.popup-message-wrapper {\r\n    max-height: 250px;\r\n    overflow-y: auto;\r\n    padding: 10px;\r\n    word-wrap: break-word;\r\n}\r\n\r\n#popupMessage {\r\n    margin: 5px 0;\r\n    padding: 10px;\r\n    font-size: 1em;\r\n    color: #66fcf1;\r\n    background-color: #1b1b1b;\r\n    border-radius: 5px;\r\n    text-align: left;\r\n    width: 100%;\r\n    max-width: 100%;\r\n}\r\n\r\n.stats-table-wrapper {\r\n    max-height: 120px;\r\n    overflow-y: auto;\r\n}\r\n\r\n#statsTable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n}\r\n\r\n#statsTable th,\r\n#statsTable td {\r\n    padding: 10px;\r\n    border: 1px solid #66fcf1;\r\n    text-align: left;\r\n}\r\n\r\n#statsTable th {\r\n    background-color: #45a29e;\r\n    color: #0b0c10;\r\n}\r\n\r\n#statsTable td {\r\n    background-color: #1b1b1b;\r\n}\r\n\r\n.team-red-charlie { background-color: red; }\r\n.team-red-delta { background-color: red; }\r\n.team-blue-alpha { background-color: blue; }\r\n.team-blue-delta { background-color: blue; }\r\n\r\n.team-content-wrapper::-webkit-scrollbar {\r\n    width: 8px;\r\n}\r\n\r\n.team-content-wrapper::-webkit-scrollbar-track {\r\n    background: #1f2833;\r\n    border-radius: 4px;\r\n}\r\n\r\n.team-content-wrapper::-webkit-scrollbar-thumb {\r\n    background: #45a29e;\r\n    border-radius: 4px;\r\n}\r\n\r\n.team-content-wrapper::-webkit-scrollbar-thumb:hover {\r\n    background: #66fcf1;\r\n}\r\n\r\n.image-control-buttons {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    display: flex;\r\n    gap: 10px;\r\n    z-index: 10;\r\n}\r\n\r\n.image-control-button {\r\n    background-color: rgba(69, 162, 158, 0.7);\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 5px 10px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n}\r\n\r\n.image-control-button:hover {\r\n    background-color: #66fcf1;\r\n    color: #0b0c10;\r\n}\r\n\r\n/* Fullscreen styles */\r\n.map-container.fullscreen {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: 1000;\r\n    background-color: #0b0c10;\r\n}\r\n\r\n.map-container.fullscreen img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n}\r\n `}</style>\r\n    </div>\r\n  );\r\n}    \r\n\r\nexport default StatsTable;"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;;;AAEA,MAAM,aAAa;;IACjB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,UAAU,CAAC;QAAG,WAAW,CAAC;IAAE;IAEjE,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD;gCAAE;YACR,MAAM,KAAK,IAAI,UAAU,kGAAA,CAAA,YAAS,CAAC,aAAa;YAEhD,GAAG,MAAM;wCAAG;oBACV,QAAQ,GAAG,CAAC;gBACd;;YAEA,GAAG,OAAO;wCAAG;oBACX,QAAQ,GAAG,CAAC;gBACd;;YAEA,GAAG,OAAO;wCAAG,CAAC;oBACZ,QAAQ,KAAK,CAAC,4BAA4B;gBAC5C;;YAEA,GAAG,SAAS;wCAAG,CAAC;oBACd,IAAI;wBACF,MAAM,OAAO,KAAK,KAAK,CAAC,QAAQ,IAAI;wBAEpC,kCAAkC;wBAClC,QAAQ,GAAG,CAAC,2BAA2B;wBAEvC,8DAA8D;wBAC9D,IAAI,KAAK,QAAQ,IAAI,KAAK,SAAS,EAAE;4BACnC,SAAS;4BAET,kCAAkC;4BAClC,QAAQ,GAAG,CAAC;4BACZ,QAAQ,GAAG,CAAC,CAAC,yBAAyB,EAAE,KAAK,QAAQ,CAAC,YAAY,IAAI,EAAE,WAAW,EAAE,KAAK,QAAQ,CAAC,aAAa,IAAI,GAAG;4BACvH,QAAQ,GAAG,CAAC,CAAC,yBAAyB,EAAE,KAAK,SAAS,CAAC,YAAY,IAAI,EAAE,WAAW,EAAE,KAAK,SAAS,CAAC,aAAa,IAAI,GAAG;wBAC3H,OAEK;4BACH,QAAQ,GAAG,CAAC,kCAAkC;wBAChD;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,+BAA+B;oBAC/C;gBACF;;YAEA;wCAAO,IAAM,GAAG,KAAK;;QACvB;+BAAG,EAAE;IAEL,4CAA4C;IAC5C,MAAM,UAAU,CAAC,MAAM;QACrB,OAAO,KAAK,CAAC,KAAK,EAAE,CAAC,KAAK,IAAI;IAChC;IAEA,qBACE,0JAAC;QAA6B,IAAG;kDAAlB;;0BACb,0JAAC;;0BAAG;;;;;;0BACJ,0JAAC;0DAAc;0BACb,cAAA,0JAAC;oBAAM,IAAG;;;sCACR,0JAAC;;sCACC,cAAA,0JAAC;;;kDACC,0JAAC;;kDAAG;;;;;;kDACJ,0JAAC;;kDAAG;;;;;;kDACJ,0JAAC;;kDAAG;;;;;;;;;;;;;;;;;sCAGR,0JAAC;;;8CACC,0JAAC;;;sDACC,0JAAC;;sDAAG;;;;;;sDACJ,0JAAC;4CAAG,OAAO;gDACT,YAAY;gDACZ,OAAO,QAAQ,YAAY,kBAAkB,IAAI,YAAY;4CAC/D;;sDACG,QAAQ,YAAY;;;;;;sDAEvB,0JAAC;4CAAG,OAAO;gDACT,YAAY;gDACZ,OAAO,QAAQ,YAAY,mBAAmB,IAAI,YAAY;4CAChE;;sDACG,QAAQ,YAAY;;;;;;;;;;;;8CAGzB,0JAAC;;;sDACC,0JAAC;;sDAAG;;;;;;sDACJ,0JAAC;4CAAG,OAAO;gDACT,YAAY;gDACZ,OAAO,QAAQ,aAAa,kBAAkB,IAAI,YAAY;4CAChE;;sDACG,QAAQ,aAAa;;;;;;sDAExB,0JAAC;4CAAG,OAAO;gDACT,YAAY;gDACZ,OAAO,QAAQ,aAAa,mBAAmB,IAAI,YAAY;4CACjE;;sDACG,QAAQ,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4TtC;GAvZM;KAAA;uCAyZS","debugId":null}},
    {"offset": {"line": 1596, "column": 0}, "map": {"version":3,"sources":["file:///C:/backup/incase%20port%20is%20not%20working/new_format/pages/index.js"],"sourcesContent":["import dynamic from \"next/dynamic\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styles from \"../styles/rtm.module.css\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport KillFeed from \"../components/KillFeed\";\r\nimport StatsTable from \"../components/StatsTable\";\r\nimport { WS_CONFIG } from \"../config\";\r\n\r\nconst MapSection = dynamic(() => import(\"../components/MapSection\"), {\r\n  ssr: false,\r\n});\r\n\r\nexport default function RealTimeMonitoring() {\r\n  const [soldiers, setSoldiers] = useState([]);\r\n  const [selectedSoldierId, setSelectedSoldierId] = useState(null);\r\n  const [comPort, setComPort] = useState(\"\");\r\n  const [wsPort, setWsPort] = useState(\"8001\");\r\n  const [savedComPort, setSavedComPort] = useState(\"\");\r\n  const [savedWsPort, setSavedWsPort] = useState(\"\");\r\n  const [sessionStatus, setSessionStatus] = useState(\"stopped\");\r\n  const [error, setError] = useState(null);\r\n\r\n  // WebSocket connection\r\n  useEffect(() => {\r\n    let ws;\r\n    if (sessionStatus === \"running\") {\r\n      const wsUrl = `ws://localhost:${savedWsPort}/ws`;\r\n      ws = new WebSocket(wsUrl);\r\n      ws.onmessage = (message) => {\r\n        try {\r\n          const data = JSON.parse(message.data);\r\n          setSoldiers((prev) => {\r\n            const filtered = prev.filter((s) => s.soldier_id !== data.soldier_id);\r\n            return [...filtered, { ...data, lastUpdate: new Date().toISOString() }];\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Error parsing soldier data:\", error);\r\n          setError(\"Error receiving data from WebSocket\");\r\n        }\r\n      };\r\n      ws.onerror = () => {\r\n        setError(\"WebSocket connection failed\");\r\n      };\r\n      ws.onclose = () => {\r\n        if (sessionStatus === \"running\") {\r\n          setError(\"WebSocket closed unexpectedly\");\r\n        }\r\n      };\r\n    }\r\n    return () => ws && ws.close();\r\n  }, [sessionStatus, savedWsPort]);\r\n\r\n  // Handle ports save\r\n  const handleSavePorts = () => {\r\n    if (!comPort || !comPort.match(/^COM\\d+$/i)) {\r\n      setError(\"Please enter a valid COM port (e.g., COM3)\");\r\n      return;\r\n    }\r\n    const wsPortNum = parseInt(wsPort);\r\n    if (!wsPort || isNaN(wsPortNum) || wsPortNum < 1024 || wsPortNum > 65535) {\r\n      setError(\"Please enter a valid WebSocket port (1024-65535)\");\r\n      return;\r\n    }\r\n    setSavedComPort(comPort.toUpperCase());\r\n    setSavedWsPort(wsPort);\r\n    setError(null);\r\n  };\r\n\r\n  // Handle session toggle\r\n  const handleToggleSession = async () => {\r\n    if (sessionStatus === \"stopped\") {\r\n      if (!savedComPort || !savedWsPort) {\r\n        setError(\"Please save valid ports first\");\r\n        return;\r\n      }\r\n      try {\r\n        const res = await fetch(\"/api/session-control\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ action: \"start\", port: savedComPort, ws_port: savedWsPort }),\r\n        });\r\n        const data = await res.json();\r\n        if (data.success) {\r\n          setSessionStatus(\"running\");\r\n          setError(null);\r\n        } else {\r\n          setError(data.error || \"Failed to start session\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error starting session: \" + err.message);\r\n      }\r\n    } else {\r\n      try {\r\n        const res = await fetch(\"/api/session-control\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ action: \"stop\" }),\r\n        });\r\n        const data = await res.json();\r\n        if (data.success) {\r\n          setSessionStatus(\"stopped\");\r\n          setError(null);\r\n        } else {\r\n          setError(data.error || \"Failed to stop session\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error stopping session: \" + err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectSoldier = (soldierId) => {\r\n    setSelectedSoldierId((prevId) => (prevId === soldierId ? null : soldierId));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.simulationPage}>\r\n      <a href=\"/\" className={styles.endSessionButton}>\r\n        End Session\r\n      </a>\r\n\r\n      <div className={styles.container}>\r\n        <div className={styles.leftContainer}>\r\n          <Sidebar\r\n            soldiers={soldiers}\r\n            selectedSoldierId={selectedSoldierId}\r\n            onSelectSoldier={handleSelectSoldier}\r\n          />\r\n        </div>\r\n        <div className={styles.rightContainer}>\r\n          <div className={styles.mapContainer}>\r\n            <MapSection soldiers={soldiers} selectedSoldierId={selectedSoldierId} />\r\n          </div>\r\n          <div className={styles.bottomSection}>\r\n            <div className={styles.killFeed}>\r\n              <KillFeed />\r\n            </div>\r\n            <div className={styles.statsTable}>\r\n              <StatsTable />\r\n            </div>\r\n          </div>\r\n          {/* Session Controls at Bottom-Right */}\r\n          <div className={styles.sessionControls}>\r\n            {sessionStatus === \"stopped\" && (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter COM Port (e.g., COM3)\"\r\n                  value={comPort}\r\n                  onChange={(e) => setComPort(e.target.value.toUpperCase())}\r\n                  className={styles.comPortInput}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter WS Port (e.g., 8001)\"\r\n                  value={wsPort}\r\n                  onChange={(e) => setWsPort(e.target.value)}\r\n                  className={styles.comPortInput}\r\n                />\r\n                <button\r\n                  onClick={handleSavePorts}\r\n                  className={styles.comPortButton}\r\n                >\r\n                  Save Ports\r\n                </button>\r\n              </>\r\n            )}\r\n            <button\r\n              onClick={handleToggleSession}\r\n              disabled={sessionStatus === \"stopped\" && (!savedComPort || !savedWsPort)}\r\n              className={styles.sessionButton}\r\n            >\r\n              {sessionStatus === \"running\" ? \"Stop Simulation\" : \"Start Simulation\"}\r\n            </button>\r\n            {error && <p className={styles.error}>{error}</p>}\r\n            {savedComPort && savedWsPort && (\r\n              <p className={styles.status}>\r\n                \r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    \r\n    \r\n    <style jsx global>{`\r\n        /* General Page Styling */\r\n        .simulationPage {\r\n          width: 100vw;\r\n          height: 100vh;\r\n          background-color: #0b0c10;\r\n          color: #66fcf1;\r\n          font-family: \"Exo 2\", sans-serif;\r\n          margin: 0;\r\n          padding: 0;\r\n          overflow: hidden;\r\n        }\r\n        .sidebar {\r\n          width: 250px;\r\n          background: #f4f4f4;\r\n          padding: 1rem;\r\n          height: 100vh;\r\n          overflow-y: auto;\r\n          border-right: 2px solid #ddd;\r\n        }\r\n          .simulationPage {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  flex: 1;\r\n}\r\n\r\n.leftContainer {\r\n  width: 250px;\r\n  border-right: 1px solid #ccc;\r\n}\r\n\r\n.rightContainer {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative; /* For absolute positioning of sessionControls */\r\n}\r\n\r\n.mapContainer {\r\n  flex: 1;\r\n  height: 60%;\r\n}\r\n\r\n.bottomSection {\r\n  display: flex;\r\n  height: 40%;\r\n}\r\n\r\n.killFeed {\r\n  flex: 1;\r\n  border-right: 1px solid #ccc;\r\n}\r\n\r\n.statsTable {\r\n  flex: 1;\r\n}\r\n\r\n.endSessionButton {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  padding: 8px 16px;\r\n  background-color: #ff4d4d;\r\n  color: white;\r\n  text-decoration: none;\r\n  border-radius: 4px;\r\n}\r\n\r\n.sessionControls {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  align-items: flex-end;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.comPortInput {\r\n  padding: 6px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  width: 150px;\r\n}\r\n\r\n.comPortButton,\r\n.sessionButton {\r\n  padding: 6px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.comPortButton:disabled,\r\n.sessionButton:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-size: 12px;\r\n  margin: 0;\r\n}\r\n\r\n.status {\r\n  font-size: 12px;\r\n  color: #333;\r\n  margin: 0;\r\n}\r\n        .team-group h4 {\r\n          margin-bottom: 0.5rem;\r\n          border-bottom: 1px solid #ccc;\r\n        }\r\n        .soldier-item {\r\n          padding: 5px;\r\n          cursor: pointer;\r\n          display: flex;\r\n          align-items: center;\r\n        }\r\n          \r\n        .soldier-item:hover {\r\n          background: #e6f7ff;\r\n        }\r\n        .dot {\r\n          height: 10px;\r\n          width: 10px;\r\n          border-radius: 50%;\r\n          margin-right: 8px;\r\n        }\r\n        .green {\r\n          background-color: green;\r\n        }\r\n        .red {\r\n          background-color: red;\r\n        }\r\n        .endSessionButton {\r\n          position: absolute;\r\n          top: 1rem;\r\n          right: 1rem;\r\n          z-index: 999; /* keep it above other elements */\r\n          padding: 0.7rem 1.2rem;\r\n          background-color: #ff4444;\r\n          color: #fff;\r\n          font-weight: bold;\r\n          text-decoration: none;\r\n          border: 2px solid #ff4444;\r\n          border-radius: 6px;\r\n          transition: background-color 0.2s, color 0.2s, border-color 0.2s;\r\n        }\r\n        .loadingContainer,\r\n        .errorContainer {\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n          align-items: center;\r\n          height: 100vh;\r\n          color: #00ffff;\r\n        }\r\n        .retryButton,\r\n        .refreshButton {\r\n          background: #00ffff;\r\n          color: #0a0a0a;\r\n          border: none;\r\n          padding: 0.5rem 1rem;\r\n          cursor: pointer;\r\n          border-radius: 4px;\r\n          font-family: \"Orbitron\", sans-serif;\r\n          margin: 1rem;\r\n        }\r\n        .retryButton:hover,\r\n        .refreshButton:hover {\r\n          background: #33ffff;\r\n        }\r\n        .endSessionButton:hover {\r\n          background-color: #ff6666;\r\n          border-color: #ff6666;\r\n          cursor: pointer;\r\n        }\r\n        /* Layout Containers */\r\n        .container {\r\n          display: flex;\r\n          height: calc(100vh - 40px);\r\n          padding: 20px;\r\n          gap: 20px;\r\n        }\r\n        .leftContainer {\r\n          flex: 0 0 200px;\r\n          background-color: #1f2833;\r\n          border-radius: 10px;\r\n          box-shadow: 0 0 10px rgba(102, 252, 241, 0.5);\r\n          overflow-y: auto;\r\n          padding: 20px;\r\n        }\r\n        .rightContainer {\r\n          flex: 1;\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 20px;\r\n        }\r\n        .mapContainer {\r\n          flex: 2;\r\n          position: relative;\r\n          background-color: #1f2833;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          height: calc(70vh - 60px);\r\n        }\r\n        .mapContainer #map {\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n        .bottomSection {\r\n          flex: 1;\r\n          display: flex;\r\n          gap: 20px;\r\n          min-height: 200px;\r\n          max-height: calc(30vh - 40px);\r\n        }\r\n        .killFeed,\r\n        .statsTable {\r\n          flex: 1;\r\n          background-color: #1f2833;\r\n          border-radius: 10px;\r\n          padding: 15px;\r\n          overflow-y: auto;\r\n        }\r\n        /* Stats Table Styling */\r\n        .statsTableWrapper {\r\n          background-color: #1e272e; /* Darker background */\r\n          border: 2px solid #ffa502; /* Bright orange border */\r\n          border-radius: 10px;\r\n          padding: 20px;\r\n          height: 100%;\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n        .statsTitle {\r\n          text-align: center;\r\n          font-size: 22px; /* Larger font size */\r\n          font-weight: bold;\r\n          margin: 0 0 20px;\r\n          color: #ffa502; /* Bright orange title */\r\n        }\r\n        /* Table Styling */\r\n        #statsTable {\r\n          width: 100%;\r\n          border-collapse: collapse; /* Removes gaps between cells */\r\n          text-align: center;\r\n          font-family: \"Exo 2\", sans-serif;\r\n          background-color: #2f3640; /* Dark gray background for the table */\r\n          border-radius: 8px; /* Rounded edges */\r\n          overflow: hidden; /* Ensures the table fits inside the wrapper */\r\n        }\r\n        #statsTable th,\r\n        #statsTable td {\r\n          padding: 12px 15px; /* Adds space inside cells */\r\n          border: 1px solid #ffa502; /* Bright orange borders for visibility */\r\n          text-align: center;\r\n        }\r\n        #statsTable th {\r\n          background-color: #ffa502; /* Bright orange header background */\r\n          color: #1e272e; /* Dark text for contrast */\r\n          font-weight: bold;\r\n          position: sticky;\r\n          top: 0;\r\n          z-index: 1;\r\n        }\r\n        #statsTable td {\r\n          background-color: #353b48; /* Darker gray for rows */\r\n          color: #dcdde1; /* Light gray text */\r\n        }\r\n        /* Hover Effect for Rows */\r\n        #statsTable tr:hover td {\r\n          background-color: #57606f; /* Slightly brighter hover color */\r\n          transition: background-color 0.2s ease;\r\n        }\r\n        /* Team Name Styling */\r\n        .teamName {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 10px; /* Spacing between team indicator and name */\r\n        }\r\n        .teamIndicator {\r\n          width: 12px;\r\n          height: 12px;\r\n          border-radius: 50%;\r\n          display: inline-block;\r\n        }\r\n        .teamIndicator.red {\r\n          background-color: #e84118; /* Bright red */\r\n        }\r\n        .teamIndicator.blue {\r\n          background-color: #00a8ff; /* Bright blue */\r\n        }\r\n        /* Scrollbar Styling */\r\n        .tableContainer::-webkit-scrollbar {\r\n          width: 8px;\r\n        }\r\n        .tableContainer::-webkit-scrollbar-thumb {\r\n          background: #ffa502;\r\n          border-radius: 4px;\r\n        }\r\n        .tableContainer::-webkit-scrollbar-thumb:hover {\r\n          background: #ffbe76;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1947, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/\";\n\n/// <reference types=\"next/client\" />\r\n\r\n// inserted by rust code\r\ndeclare const PAGE_PATH: string\r\n\r\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\r\n;(window.__NEXT_P = window.__NEXT_P || []).push([\r\n  PAGE_PATH,\r\n  () => {\r\n    return require('PAGE')\r\n  },\r\n])\r\n// @ts-expect-error module.hot exists\r\nif (module.hot) {\r\n  // @ts-expect-error module.hot exists\r\n  module.hot.dispose(function () {\r\n    window.__NEXT_P.push([PAGE_PATH])\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}